/*
 *  This file is auto generated by oeedger8r. DO NOT EDIT.
 */
#ifndef EDGER8R_REMOTEATTESTATION_U_H
#define EDGER8R_REMOTEATTESTATION_U_H

#include <openenclave/host.h>

#include "remoteattestation_args.h"

OE_EXTERNC_BEGIN

oe_result_t oe_create_remoteattestation_enclave(
    const char* path,
    oe_enclave_type_t type,
    uint32_t flags,
    const oe_enclave_setting_t* settings,
    uint32_t setting_count,
    oe_enclave_t** enclave);

/**** Trusted function IDs ****/
enum
{
    remoteattestation_fcn_id_get_remote_report_with_pubkey = 0,
    remoteattestation_fcn_id_trusted_call_id_max = OE_ENUM_MAX
};

/**** ECALL marshalling structs. ****/
typedef struct _get_remote_report_with_pubkey_args_t
{
    oe_result_t _result;
    int _retval;
    uint8_t** pem_key;
    size_t* key_size;
    uint8_t** remote_report;
    size_t* remote_report_size;
} get_remote_report_with_pubkey_args_t;

/**** ECALL prototypes. ****/
oe_result_t get_remote_report_with_pubkey(
    oe_enclave_t* enclave,
    int* _retval,
    uint8_t** pem_key,
    size_t* key_size,
    uint8_t** remote_report,
    size_t* remote_report_size);

/**** Untrusted function IDs. ****/
enum
{

    remoteattestation_fcn_id_untrusted_call_max = OE_ENUM_MAX
};

/**** OCALL marshalling structs. ****/
/* There were no ocalls. */

/**** OCALL prototypes. ****/
/* There were no ocalls. */

OE_EXTERNC_END

#endif // EDGER8R_REMOTEATTESTATION_U_H
